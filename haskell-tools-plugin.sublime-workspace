{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"stop_",
				"stop_client_but_server"
			],
			[
				"stop",
				"stop_client_but_server"
			],
			[
				"clie",
				"client"
			],
			[
				"client",
				"ClientManager"
			],
			[
				"ini",
				"init_variables"
			],
			[
				"socket",
				"close_socket"
			],
			[
				"close",
				"close_socket"
			],
			[
				"kill",
				"kill_server"
			],
			[
				"eras",
				"erase_status_bar"
			],
			[
				"set_s",
				"set_status_bar"
			],
			[
				"is",
				"is_sendable"
			],
			[
				"serve",
				"is_server_alive"
			],
			[
				"sb_event_",
				"sb_event_msg_type"
			],
			[
				"sb",
				"sb_event"
			],
			[
				"encode",
				"encode_and_send"
			],
			[
				"Co",
				"ConnectionResetError"
			],
			[
				"init_",
				"init_packages_from_config_file"
			],
			[
				"ref",
				"refresh_packages"
			],
			[
				"sen",
				"sended_package_paths"
			],
			[
				"to",
				"set_toggled_packages"
			],
			[
				"try",
				"try\tTry/Except"
			],
			[
				"load",
				"loadedModules"
			],
			[
				"config_",
				"config_packages"
			],
			[
				"lsi",
				"list_of_data"
			],
			[
				"list",
				"list_of_data"
			],
			[
				"ClientIn",
				"ClientInit"
			],
			[
				"Client",
				"ClientManager"
			],
			[
				"active",
				"active_window"
			],
			[
				"ser",
				"is_server_alive"
			],
			[
				"server",
				"server_path"
			],
			[
				"su",
				"sublime_plugin"
			],
			[
				"pac",
				"package"
			],
			[
				"config",
				"config_file"
			],
			[
				"conf",
				"config_file_path"
			],
			[
				"con",
				"config_file_str"
			],
			[
				"set",
				"set_config_file"
			],
			[
				"se",
				"server_path"
			],
			[
				"dec",
				"decoded_json"
			],
			[
				"get",
				"get_client_manager"
			],
			[
				"serv",
				"server_path"
			],
			[
				"co",
				"config_file_path"
			],
			[
				"confi",
				"config_file"
			],
			[
				"init",
				"init_config_file"
			],
			[
				"send_",
				"send_config_file"
			],
			[
				"remove",
				"removedModules"
			],
			[
				"lis",
				"list_of_data"
			],
			[
				"erro",
				"error_msg"
			],
			[
				"Serve",
				"ServerManager"
			],
			[
				"Serv",
				"ServerManager"
			],
			[
				"Ser",
				"ServerManager"
			],
			[
				"run",
				"run_command"
			],
			[
				"acti",
				"active_window"
			],
			[
				"str",
				"str_message"
			],
			[
				"file",
				"file_name"
			],
			[
				"e",
				"editor_selection"
			],
			[
				"col",
				"col_end"
			],
			[
				"col_",
				"col_begin"
			],
			[
				"row",
				"row_end"
			],
			[
				"__",
				"__init__"
			],
			[
				"len",
				"len_current_packages"
			],
			[
				"_",
				"_instance"
			],
			[
				"err",
				"errorMsg"
			],
			[
				"fo",
				"for\tFor Loop"
			],
			[
				"f",
				"folders"
			],
			[
				"can",
				"can_client_send"
			],
			[
				"while",
				"while\tWhile Loop"
			],
			[
				"sel",
				"selfsocket"
			],
			[
				"send",
				"send_message"
			],
			[
				"del",
				"deleted"
			],
			[
				"sto",
				"stop_server"
			],
			[
				"thre",
				"thread"
			],
			[
				"thread",
				"threading"
			],
			[
				"folde",
				"folder_listing"
			],
			[
				"Fol",
				"FoldersCommand"
			],
			[
				"S",
				"StartServerCommand"
			],
			[
				"startclinet",
				"startclient"
			],
			[
				"web",
				"websocket\tmodule"
			],
			[
				"i",
				"insert"
			],
			[
				"a",
				"addr"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "from __future__ import with_statement\nfrom threading import Thread\nfrom threading import Lock\n\nimport sublime\nimport os\nimport socket \nimport time    \nimport json \n\nclass ClientManager:\n\n\t_instance = None\n\n\tdef __init__(self):\n\t\t# server\n\t\tself.server_path = \"\"\n\t\tself.is_server_alive = False\n\t\tself.server_init_error = False\n\t\t\n\t\t# client\n\t\tClientManager._instance = self\n\t\tself.host = \"127.0.0.1\"\n\t\tself.port = 4123\n\n\t\t# lock\n\t\tself.lock = Lock()\n\t\tself.lock.acquire()\n\n\t\t# packeges\n\t\tself.sent_package_paths = \"\"\n\n\t\t# selection\n\t\tself.selection = \"\"\n\t\tself.selection_file_name = \"\"\n\n\t\t#config\n\t\tself.config = {}\n\t\tself.config_packages = []\n\t\tself.config_file_path = os.path.dirname(__file__) + \"\\\\config\"\n\n\t\t#status bar\n\t\tself.sb_connection = \"Connection: \"\n\t\tself.sb_info = \"Info: \"\n\t\tself.sb_error = \"Error message: \"\n\t\tself.sb_event_msg_type = \"\"\n\t\tself.sb_event_msg = \"\"\n\t\tself.is_sb_event_active = False;\n\t\tsublime.active_window().active_view().set_status('serverStatus', ''.join([self.sb_connection,'disconnected from server']))\n\n\t\tself.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\t\tself.is_client_closable = False\n\n\t# def reconnect(self):\n\t# \tself.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\t# \tself.is_client_closable = False\n\n\n\tdef startclient(self):\n\t\tthread = Thread(target = self.connect, args=())\n\t\tthread.start()\n\t\tprint(\"INFO: Connect thread started.\")\n\n\n\tdef connect(self):\n\t\tisConnected = False\n\t\twhile True:\n\t\t\t\n\t\t\ttry:\n\t\t\t\tself.socket.connect((self.host, self.port))\n\t\t\t\tself.lock.release()\n\t\t\t\tisConnected = True\n\t\t\t\tbreak\n\n\t\t\texcept Exception as e:\n\t\t\t\ttime.sleep(0.1)\n\t\t\t\tself.status_thread_runner(self.sb_error, \"can't make a connection with server\")\n\t\t\t\tprint(\"Receive threads exception: \",e)\n\t\t\t\tbreak\n\t\t\t\n\t\tself.is_server_alive = True\t\n\t\tthread = Thread(target = self.receive, args=())\n\t\tthread.start()\n\t\tprint(\"INFO: Receive thread started.\")\n\t\t\n\t\tsublime.active_window().active_view().set_status('serverStatus', ''.join([self.sb_connection,'connected to server']))\n\t\tsublime.active_window().run_command(\"toggle\", {\"paths\": self.config_packages})\n\t\t\t\t\t\n\n\tdef receive(self):\n\t\tlist_of_data = []\n\n\t\twhile True:\n\t\t\ttry:\n\t\t\t\tdata = self.socket.recv(1024)\n\t\t\t\t#self.is_server_alive = True\t\t\n\t\t\t\tdel list_of_data[:]\n\n\t\t\t\tif data == b'\\n' or data == b'':\n\t\t\t\t\tcontinue \n\t\t\t\telse:\n\t\t\t\t\tlist_of_data.append(data)\n\t\t\t\t\n\t\t\t\tfor i in list_of_data:\n\t\t\t\t\tmessage = json.loads(i.decode(\"utf-8\"))\n\t\t\t\t\tprint(\"RECEIVED MESSAGE: \", message)\n\n\t\t\t\t\tif message.get(\"tag\") == \"ErrorMessage\":\n\t\t\t\t\t\tsublime.message_dialog(message.get(\"errorMsg\"))\n\t\t\t\t\t\tself.status_thread_runner(self.sb_error, message.get(\"errorMsg\"))\n\n\t\t\t\t\telif message.get(\"tag\") == \"LoadedModules\":\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(message.get(\"loadedModules\") != []):\n\t\t\t\t\t\t\tself.set_toggled_packages()\n\t\t\t\t\t\t\tself.status_thread_runner(self.sb_info, 'modules loaded')\n\n\t\t\t\t\telse :\n\t\t\t\t\t\tself.status_thread_runner(self.sb_info, \"a message handled, for further info please read the log\")\n\t\t\t\t\t\tprint(\"Handled message: \", message)\n\n\t\t\texcept Exception:\n\t\t\t\tself.is_server_alive = False\n\t\t\t\tsublime.active_window().active_view().set_status('serverStatus', ''.join([self.sb_connection,'disconnected from server']))\n\t\t\t\tself.status_thread_runner(self.sb_error, 'connection with server unexpectedly closed')\n\t\t\t\tself.stop_client_but_server()\n\t\t\t\tbreak\n\n\n\tdef send_message(self, msg):\n\t\ttry:\n\t\t\twith self.lock:\n\t\t\t\tif msg != b'\\n' and msg != b'':\n\t\t\t\t\tself.socket.send(msg)\n\t\t\t\t\tprint(\"SENDED MESSAGE: \", msg)\n\n\t\texcept ConnectionResetError:\n\t\t\tself.is_server_alive = False\n\t\t\tself.status_thread_runner(self.sb_error, 'connection with server unexpectedly closed')\n\t\t\tself.stop_client_but_server()\t\t\t\n\n\tdef set_servers_path(self, path):\n\t\tif(path != \"\"):\n\t\t\tself.server_path = path\n\t\t\tself.config['server_path'] = self.server_path\n\t\t\tself.set_config_file()\n\t\telse:\n\t\t\tsublime.message_dialog(\"Empty path value is not valid.\")\n\n\n\tdef set_toggled_packages(self):\n\t\tfor i in self.sent_package_paths:\n\t\t\tif(not(i in self.config_packages)):\n\t\t\t\tself.config_packages.append(i)\n\t\t\n\t\tself.config['packages'] = self.config_packages\n\t\tself.set_config_file()\n\n\n\tdef remove_untoggled_packages(self, package):\n\t\tis_sendable = True\n\t\tfor item in package:\n\t\t\ttry:\n\t\t\t\tself.config_packages.remove(item)\n\t\t\texcept ValueError as ve:\n\t\t\t\tis_sendable = False\n\t\t\t\tsublime.message_dialog(\"This file was not toggled before!\")\n\t\t\t\n\t\tif(is_sendable):\n\t\t\tself.config['packages'] = self.config_packages\n\t\t\tself.set_config_file()\n\n\n\tdef set_config_file(self):\n\t\topen(self.config_file_path,'w').close\n\t\tself.config['server_path'] = self.server_path\n\t\tself.config['packages'] = self.config_packages\n\t\tconfig_str = json.dumps(self.config)\n\n\t\twith open(self.config_file_path, 'w') as config_file:\n\t\t\tconfig_file.write(config_str)\n\t\tconfig_file.close()\n\n\n\tdef init_servers_path_from_config_file(self):\n\n\t\tconfig_file = open(self.config_file_path, 'r')\n\t\tconfig_str = config_file.read()\n\t\tconfig_json = json.loads(config_str)\n\t\tvalue = config_json.get(\"server_path\")\n\n\t\tif( value != None ):\n\t\t\tself.server_path = value\n\t\telse:\n\t\t\tself.server_init_error = True\n\t\t\tsublime.message_dialog(\"The servers path is not given yet! Please give it below.\")\n\t\t\tsublime.active_window().run_command(\"set_server_path\")\n\t\t\n\t\tconfig_file.close()\n\n\n\tdef init_packages_from_config_file(self):\n\t\tconfig_file = open(self.config_file_path, 'r')\n\t\tconfig_str = config_file.read()\n\t\ttry:\n\t\t\tconfig_json = json.loads(config_str)\n\t\t\tvalue = config_json.get(\"packages\")\n\t\t\tif( (value != None) and (len(value) != 0)):\n\t\t\t\tself.config_packages = value\n\t\t\telse: \n\t\t\t\tself.status_thread_runner(self.sb_error, \"there isn't any packages to initialize\")\n\t\texcept ValueError:\n\t\t\tself.status_thread_runner(self.sb_error, \"there isn't any packages to initialize\")\n\t\t\n\t\tconfig_file.close()\n\t\t\n\n\tdef init_config_file(self):\n\t\ttry:\n\t\t\tself.init_servers_path_from_config_file()\n\t\t\tself.init_packages_from_config_file()\n\t\texcept Exception as exc:\n\t\t\tself.status_thread_runner(self.sb_error, \"unexpected error while config file initialization\")\n\t\t\tprint(\"Exception thrown at config file initialization: \", exc)\n\n\n\tdef encode_and_send(self, data):\n\t\tstr_message = json.dumps(data)\n\t\tbyte_message = str.encode(str_message)\n\t\tself.send_message(byte_message)\n\n\n\tdef refresh_packages(self, paths, command):\n\t\t\n\t\tif(self.is_server_alive == True):\n\t\t\tdata = {}\n\t\t\tis_sendable = False\n\n\t\t\tif((command == \"toggle\")):\n\t\t\t\tis_sendable = True\t\n\t\t\t\tdata['tag'] = 'AddPackages'\n\t\t\t\tdata['addedPathes'] = paths\n\t\t\t\tself.sent_package_paths = paths\n\n\t\t\telif (command == \"untoggle\"):\n\t\t\t\tis_sendable = True\n\t\t\t\tdata['tag'] = 'RemovePackages'\n\t\t\t\tdata['removedPathes'] = paths\n\t\t\t\tself.remove_untoggled_packages(paths)\n\t\t\t\n\t\t\tif is_sendable:\n\t\t\t\tself.encode_and_send(data)\n\n\n\tdef get_selection(self):\n\t\tview = sublime.active_window().active_view()\n\t\trow_begin, col_begin = view.rowcol(view.sel()[0].begin())\n\t\trow_end, col_end = view.rowcol(view.sel()[0].end())\n\n\t\trow_begin += 1\n\t\tcol_begin += 1\n\t\trow_end += 1\n\t\tcol_end += 1\n\n\t\tself.selection = str(row_begin) + \":\" + str(col_begin) + \"-\" + str(row_end) + \":\" + str(col_end)\n\t\tself.selection_file_name = view.file_name()\n\n\n\tdef perform_refactoring(self, edit, refactoring_type, details):\n\n\t\tif(self.is_server_alive):\n\t\t\t\n\t\t\tself.get_selection()\n\t\t\tpath = str(self.selection_file_name)\n\t\t\tdetails_array = []\n\n\t\t\tif details != None:\n\t\t\t\tdetails_array.append(details)\n\n\t\t\tdata = {}\n\t\t\tdata['tag'] = 'PerformRefactoring'\n\t\t\tdata['refactoring'] = refactoring_type\n\t\t\tdata['modulePath'] = path\n\n\t\t\tif(refactoring_type == \"OrganizeImports\" or refactoring_type == \"GenerateExports\"):\n\t\t\t\tdata['editorSelection'] = \"\"\n\t\t\telse:\n\t\t\t\tdata['editorSelection'] = self.selection\n\t\t\t\t\n\t\t\tdata['details'] = details_array\n\t\t\tself.encode_and_send(data)\n\n\t\telse:\n\t\t\tsublime.message_dialog(\"You need to start haskell tool first!\")\n\t\t\t\n\n\tdef reload(self, path, action_tpye):\n\t\tchanged_modules_array = []\n\t\tremoved_modules_array = []\n\t\tdata = {}\n\n\t\tif action_tpye == \"saved\":\n\t\t\tchanged_modules_array.append(path)\n\t\telif action_tpye == \"removed\":\n\t\t\tremoved_modules_array.append(path)\n\n\t\tdata['tag'] = 'ReLoad'\n\t\tdata['changedModules'] = changed_modules_array\n\t\tdata['removedModules'] = removed_modules_array\n\t\tself.encode_and_send(data)\n\n\n\tdef show_status(self, msg_type, msg):\n\t\tself.set_status_bar()\n\t\ttime.sleep(5)\n\t\tself.erase_status_bar()\n\t\t\n\tdef set_status_bar(self):\n\t\tsublime.active_window().active_view().set_status(self.sb_event_msg_type, self.sb_event_msg)\n\t\tself.is_sb_event_active = True\n\n\tdef erase_status_bar(self):\n\t\tsublime.active_window().active_view().erase_status(self.sb_event_msg_type)\n\t\tself.is_sb_event_active = False\n\n\tdef status_thread_runner(self, msg_type, msg):\n\t\tself.sb_event_msg_type = msg_type\n\t\tself.sb_event_msg = ''.join([ msg_type, msg])\n\n\t\tthread = Thread(target = self.show_status, args=(msg_type, msg))\n\t\tthread.start()\n\n\tdef stop_client(self):\n\t\tif(self.is_server_alive):\t\n\t\t\tdata = {}\n\t\t\tcontents_array = []\n\t\t\tdata['tag'] = 'Stop'\n\t\t\tdata['contents'] = contents_array\n\t\t\tself.encode_and_send(data)\n\t\t\tself.close_socket()\n\t\t\tself.kill_server()\n\t\t\tself.erase_status_bar()\n\t\t\tself.is_client_closable = True\n\t\telse:\n\t\t\tsublime.message_dialog(\"You need to start the tool before you want to stop!\")\n\n\tdef stop_client_but_server(self):\n\t\tdata = {}\n\t\tcontents_array = []\n\t\tdata['tag'] = 'Stop'\n\t\tdata['contents'] = contents_array\n\t\tself.encode_and_send(data)\n\t\tself.close_socket()\n\t\tself.erase_status_bar()\n\t\tself.is_client_closable = True\n\n\tdef close_socket(self):\n\t\tprint(\"SOCKET BEFORE CLOSE: \",self.socket)\n\t\tself.socket.close()\n\t\t\n\n\tdef kill_server(self):\n\t\tself.is_server_alive = False\n\t\tkill_command = 'TASKKILL /F /IM ' + self.server_path\n\t\tos.system(kill_command)\n\ndef get_client_manager():\n\tif ClientManager._instance is None:\n\t\tClientManager._instance = ClientManager()\n\treturn ClientManager._instance\n\ndef get_a_new_client_manager():\n\tClientManager._instance = ClientManager()\n\treturn ClientManager._instance",
			"file": "client/ClientManager.py",
			"file_size": 10344,
			"file_write_time": 131382262611528809,
			"settings":
			{
				"buffer_size": 9971,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "HaskellToolsPlugin.py",
			"settings":
			{
				"buffer_size": 2261,
				"line_ending": "Windows"
			}
		},
		{
			"file": "RenameCommand.py",
			"settings":
			{
				"buffer_size": 504,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 104.0,
		"last_filter": "menu",
		"selected_items":
		[
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"meu",
				"View: Toggle Menu"
			],
			[
				"Package Control",
				"Preferences: Package Control Settings – Default"
			],
			[
				"package  ",
				"Package Control: Remove Package"
			],
			[
				"",
				"Anaconda: Show error list"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 470.0,
		"history":
		[
			"print(sys.version)",
			"asd",
			"clear",
			"asd",
			"cl",
			"clear",
			"print(sys.version)",
			"import sys",
			"print(sys.version)",
			"import sys",
			"print(sys.version)",
			"python --version",
			"sys.version()",
			"sys.version",
			"-version python",
			"python -version",
			"--version python",
			"python --version",
			"python",
			"print(sys.version)",
			"import sys",
			"print(sys.version)",
			"python",
			"clear",
			"ddsf7",
			"exit",
			"asd",
			"print \"Géza\"",
			"python",
			"exit",
			"--version",
			"version",
			"fsdf",
			"python --version",
			"python",
			"python --version",
			"yxcyxc",
			"view.run_command(\"server\")",
			"view.run_command(\"text\")",
			"view.run_command(\"text\", \"helo\")",
			"view.run_command(\"text\", 'helo')",
			"view.run_command(\"text\")",
			"view.run_command(\"hello\")",
			"Hello World!"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool"
	],
	"file_history":
	[
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/ServerControllerCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-test/Rename.hs",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-test/OrganizeImports.hs",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/FloatOutCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/HaskellToolsPlugin.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/server/ServerManager.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/StopClientCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/client/ClientManager.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-test/GenerateTypeSignature.hs",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/client/config",
		"/C/Users/Zoli/Desktop/MENT.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-test/InlineBinding.hs",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-test/ExtractBinding.hs",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/ToggleCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/SetServerPathCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/Side Bar.sublime-menu",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/ExtractBindingCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/RenameCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/haskell-tools-plugin.sublime-project",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/UntoggleCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/OrganizeImportsCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/InlineBindingCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/GenerateTypeSignatureCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/GenerateExportsCommand.py",
		"/E/Szakdolgozat/clientmanager_methods.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/Main.sublime-menu",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/GenerateExportsCommands.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-test/GenerateExports.hs",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/README.md",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-test/A.hs",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-test/B.hs",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-test2/C.hs",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-test2/D.hs",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages2/Packages/haskell-tool/client/ClientManager.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages2/Packages/haskell-tool/RenameCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages2/Packages/haskell-tool/ServerControllerCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages2/Packages/haskell-tool/ToggleCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool.rar",
		"/C/Users/Zoli/AppData/Local/Temp/Rar$DIa0.506/QuickCheckTest.java",
		"/C/Users/Zoli/AppData/Local/Temp/Rar$DIa0.181/QuickChecker.java",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/KeepAliveCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/client/ClientInit.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/todo",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/DefaultStatus.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/ShowOnStatusBar.py",
		"/C/Users/Zoli/AppData/Local/Temp/Rar$DIa0.288/CurrentPathStatus.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/temp/CloseFileByName.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"/C/Users/Zoli/AppData/Local/Temp/Rar$DIa0.559/DataStoreType.java",
		"/C/Users/Zoli/AppData/Local/Temp/Rar$DIa0.226/Transformer.java",
		"/C/Users/Zoli/AppData/Local/Temp/Rar$DIa0.347/Selector.java",
		"/C/Users/Zoli/AppData/Local/Temp/Rar$DIa0.848/ElemCreator.java",
		"/C/Users/Zoli/AppData/Local/Temp/Point.java",
		"/C/Users/Zoli/AppData/Local/Temp/Rar$DIa0.076/DataStore.java",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/guest.sublime-project",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/ExtractBindigCommand",
		"/E/Suli/Halado Java/gyak_01.txt",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/CloseFileByName.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/IsDirty.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/ConnectToHaskellToolCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/RefactoringCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/RefreshCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/PopUpCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/Refactoring.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/ViewPlugin.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/asd",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/dfsdf",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/GetCurrentFolderListCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/User/Commands.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/RefreshPackagesCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/FoldersCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/IsModified.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/ServerManager.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/ClientManager.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/tool/ServerManager.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/tool/ClientManager.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/tool/ServerControllerCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/Commands/FoldersCommand.py",
		"/E/Suli/szamgraf/cg_bead_02/02_ParamSurfTextures/02_ParamSurfTextures/main.cpp",
		"/E/Suli/szamgraf/03_Geometry/03_Geometry/main.cpp",
		"/E/Suli/szamgraf/bead02.txt",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/Commands/IsDirty.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/Commands/CloseFileByName.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/Commands/Main.sublime-menu",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/Commands.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/ClientCommand.py",
		"/E/Suli/szamgraf/mintaZH/01_Middle/01_Middle/dirLight.frag",
		"/E/Suli/szamgraf/mintaZH/01_Middle/01_Middle/MyApp.h",
		"/E/Suli/oprendszerek/bead_02/bead.c",
		"/E/Suli/oprendszerek/varju_zoltan_vilmos_gl7h3k_os_bead_02/kos_data",
		"/E/Suli/oprendszerek/bead_01/bead.c",
		"/C/Users/Zoli/AppData/Local/Temp/Rar$DIa0.482/bead.c",
		"/E/Suli/oprendszerek/bead_02/data",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/haskell-tool/ServerCommand.py",
		"/C/Users/Zoli/Desktop/infotöri",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/ClientCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/Main.sublime-menu",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/ServerCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/ServerControllerCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/FoldersCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/OpenFileByName",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/__init__.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Default/Main.sublime-menu",
		"/C/Users/Zoli/Desktop/todo",
		"/C/Users/Zoli/Desktop/main.cpp",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/CloseFileByName.py",
		"/C/Users/Zoli/Desktop/opr.pdf",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/SimpleServer/StartServer.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/SimpleServer/Server.packege-menu.json",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/SimpleServer/ThreadRunnerCommand.py",
		"/C/Users/Zoli/Desktop/MyApp.cpp",
		"/C/Users/Zoli/AppData/Local/Temp/Rar$DIa0.731/MyApp.cpp",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/ExecServer.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/test.txt",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/Commands.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/OpenFileByNameCommand.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Haskell Tool/ThreadRunnerCommand.py",
		"/C/Users/Zoli/AppData/Local/Temp/ExpectedValue.java",
		"/C/Users/Zoli/Desktop/ExpectedValue.java",
		"/C/Users/Zoli/Desktop/infinity stones",
		"/C/Users/Zoli/Desktop/bead.c",
		"/C/Users/Zoli/Desktop/gl7h3k_bead01/bead.c",
		"/C/Users/Zoli/AppData/Local/Temp/scp17940/afs/inf.elte.hu/user/v/va/vazuaai/2016_2017_1/os/bead_01/bead.c",
		"/C/Program Files/Sublime Text 3/sublime_plugin.py",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/User/Python.sublime-settings",
		"/C/Users/Zoli/AppData/Roaming/Sublime Text 3/Packages/Python/Python.sublime_build"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 96.0,
		"where_history":
		[
			"C:\\Users\\Zoli\\AppData\\Roaming\\Sublime Text 3\\Packages",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"stop_client_but_server",
			"server_init_error",
			"is_server_alive",
			"is_sb_event_active",
			"socket",
			"SOCKET",
			"socket",
			"print",
			"disconnected from server",
			"Disconnected from server",
			"Disconnected",
			"Disconected",
			"Disc",
			"status_thread_runner",
			"show_status",
			"remove_untoggled_packages",
			"encode_and_send",
			"send_message",
			"init_servers_path_from_config_file",
			"sb_error",
			"get_selection",
			"self",
			"message_dialog",
			"message from server handled",
			"message from server",
			"message handled",
			"message handle",
			"refresh_packages",
			"unexpected",
			"unexpec",
			"can't make",
			"get_client_manager",
			"ClientManager",
			"sublime_plugin",
			"sublime",
			"time",
			"server_path",
			"keep_",
			"changed_modules_array",
			"self.edit",
			"encode_and_send",
			"remove_untoggled_packages",
			"set_toggled_packages",
			"send_message",
			"connection",
			"return",
			"__init__",
			"sublime",
			"changed_modules_array",
			"reload",
			"str_message",
			"stop",
			"refresh_packages",
			"init_packages_from_config_file",
			"init_config_file",
			"remove_untoggled_packages",
			"server_path",
			"list_of_data",
			"incoming",
			"self.is_server_alive",
			"self.connected",
			"keep_alive",
			"set_toggled_packages",
			"self.sent_package_paths",
			"self.current_packages",
			"self.sent_packages",
			"current_packages",
			"sent_packages",
			"is_alive_counter",
			"keep_alive_server_runner",
			"keep_alive_server",
			"is_alive_counter",
			"can't make a connection with server",
			"sublime_plugin",
			"sys",
			"Zoli",
			"can't",
			"message_dialog",
			"status_thread_runner",
			"show_status",
			"set_status",
			"\t\t\t\t\t\t#",
			"set_status",
			")\n",
			"connection with",
			"message_dialog",
			"ConnectionResetError",
			"connection",
			"please give",
			"please give below",
			"set_toggled_packages",
			"add",
			".add",
			"remove_untoggled_packages",
			"init_config_packages_to_server",
			"sublime.",
			"command",
			"init_config_file",
			"set_toggled_packages",
			"sent_package_paths",
			"sent_packages_paths",
			"sent_packages",
			"sended_package_paths",
			"receive thread",
			"\"CP:\"",
			"self.init_packages_from_config_file()",
			"CP",
			"config_packages",
			"set_toggled_packages",
			"init_client",
			"init_config_file",
			"You need to toggle the package of this file first",
			"instance",
			"rename",
			"config_packages",
			"loading_modules",
			"keep_a",
			"RECEIVED",
			"host",
			"view",
			"init_config_file",
			"init_client",
			"init_config_file",
			"init_packages_from_config_file",
			"loadingmodules",
			"receive thread started",
			"keep_alive_server_runner",
			"print"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"handle_status\n\nsent_package_paths",
			"\n\nsent_package_paths"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "client/ClientManager.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9971,
						"regions":
						{
						},
						"selection":
						[
							[
								9971,
								9971
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5757.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "HaskellToolsPlugin.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 2261,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 235.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "RenameCommand.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 504,
						"regions":
						{
						},
						"selection":
						[
							[
								255,
								255
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.anaconda_documentation":
	{
		"height": 130.0
	},
	"output.error":
	{
		"height": 130.0
	},
	"output.error_output":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 144.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.out":
	{
		"height": 0.0
	},
	"output.sf_st3_output":
	{
		"height": 130.0
	},
	"output.unsaved_changes":
	{
		"height": 142.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "haskell-tools-plugin.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"mnu",
				"haskell-tool\\Main.sublime-menu"
			],
			[
				"",
				"C:\\Users\\Zoli\\AppData\\Roaming\\Sublime Text 3\\Packages\\Haskell Tool\\ClientCommand.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 291.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
